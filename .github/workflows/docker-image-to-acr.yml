name: Build and Push to Azure Container Registry

on:
  push:
    branches:
      - dev
      - prod

env:
  AZ_RESOURCE_GROUP: ${{ vars.AZ_RESOURCE_GROUP }}
  AZ_CONTAINER_REGISTRY_NAME: ${{ vars.AZ_CONTAINER_REGISTRY_NAME }}
  AZ_CONTAINER_APP_NAME: ${{ vars.AZ_CONTAINER_APP_NAME }}
  AZ_IMAGE_NAME: ${{ vars.AZ_IMAGE_NAME }}
  AZ_IMAGE_VERSION_TAG: ${{ github.ref == 'refs/heads/prod' && 'prod' || 'dev' }}
  
  VITE_COMPANY_NAME: ${{ vars.VITE_COMPANY_NAME }}
  VITE_ANTHROPIC_ENABLE: ${{ vars.VITE_ANTHROPIC_ENABLE }}
  VITE_OPENAI_O1_ENABLE: ${{ vars.VITE_OPENAI_O1_ENABLE }}
  VITE_CHECK_AAD_AUTH: ${{ vars.VITE_CHECK_AAD_AUTH }}
  VITE_LOGIN_URL: ${{ vars.VITE_LOGIN_URL }}
  VITE_LOGOUT_URL: ${{ vars.VITE_LOGOUT_URL }}

jobs:
  Build-and-Push-Image:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/prod' && 'prod' || 'dev' }}

    steps:
    - uses: actions/checkout@v2

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      
    - name: Build image
      run: |
        docker build . -t ${{ env.AZ_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.AZ_IMAGE_NAME }}:${{ env.AZ_IMAGE_VERSION_TAG }} \
        --build-arg VITE_COMPANY_NAME="${{ env.VITE_COMPANY_NAME }}" \
        --build-arg VITE_ANTHROPIC_ENABLE="${{ env.VITE_ANTHROPIC_ENABLE }}" \
        --build-arg VITE_OPENAI_O1_ENABLE="${{ env.VITE_OPENAI_O1_ENABLE }}" \
        --build-arg VITE_CHECK_AAD_AUTH="${{ env.VITE_CHECK_AAD_AUTH }}" \
        --build-arg VITE_LOGIN_URL="${{ env.VITE_LOGIN_URL }}" \
        --build-arg VITE_LOGOUT_URL="${{ env.VITE_LOGOUT_URL }}"

    
    - name: Push image to ACR
      run: |
        az acr login --name ${{ env.AZ_CONTAINER_REGISTRY_NAME }}

        docker push ${{ env.AZ_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.AZ_IMAGE_NAME }}:${{ env.AZ_IMAGE_VERSION_TAG }}
          
  Update-Container-App:
    needs: Build-and-Push-Image
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/prod' && 'prod' || 'dev' }}

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Restart a Container App Revision
      run: |
        echo "Listing active revisions for ${{ vars.AZ_CONTAINER_APP_NAME }}..."
        ACTIVE_REVISION=$(az containerapp revision list --name ${{ vars.AZ_CONTAINER_APP_NAME }} --resource-group ${{ vars.AZ_RESOURCE_GROUP }} \
          | jq -r '.[] | select(.properties.active == true) | .name')
        
        echo "Active revision: $ACTIVE_REVISION"
        
        if [ -n "$ACTIVE_REVISION" ]; then
          echo "Restarting active revision $ACTIVE_REVISION..."
          az containerapp revision restart --name ${{ vars.AZ_CONTAINER_APP_NAME }} --resource-group ${{ vars.AZ_RESOURCE_GROUP }} --revision $ACTIVE_REVISION
          echo "$ACTIVE_REVISION restarted successfully."
        else
          echo "No active revision found to restart."
        fi

